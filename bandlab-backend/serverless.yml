service: bandlab-backend

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    SNS_TOPIC_ARN: ${env:SNS_TOPIC_ARN}
    SQS_QUEUE_URL: ${env:SQS_QUEUE_URL}
    S3_BUCKET: ${env:S3_BUCKET}
    DYNAMODB_TABLE_POSTS: ${env:DYNAMODB_TABLE_POSTS}
    DYNAMODB_TABLE_COMMENTS: ${env:DYNAMODB_TABLE_COMMENTS}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sns:Publish"
        - "dynamodb:Scan"
        - "dynamodb:Query"
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:Query"
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:DeleteObject"
      Resource: "*"

functions:
  createPost:
    handler: handler.createPost
    events:
      - http:
          path: posts
          method: post
          cors: true

  addComment:
    handler: handler.addComment
    events:
      - http:
          path: posts/{postId}/comments
          method: post
          cors: true

  deleteComment:
    handler: handler.deleteComment
    events:
      - http:
          path: posts/{postId}/comments/{commentId}
          method: delete
          cors: true

  listPosts:
    handler: handler.listPosts
    events:
      - http:
          path: posts
          method: get
          cors: true

resources:
  Resources:
    PostsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_POSTS}
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    CommentsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_COMMENTS}
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
          - AttributeName: commentId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
          - AttributeName: commentId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    S3Bucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000

    SQSQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: bandlab-backend-queue

    SNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: bandlab-backend-topic

plugins:
  - serverless-dotenv-plugin # Load environment variables from .env file
  - serverless-offline       # For local testing
