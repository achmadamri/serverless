service: bandlab-backend

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}  # Defaults to 'dev' stage if not specified

  environment:
    SNS_TOPIC_ARN: ${self:custom.snsTopicArn.${self:provider.stage}}

custom:
  snsTopicArn:
    dev: ${env:SNS_TOPIC_ARN}  # For local development, fetches from .env file
    prod:
      Fn::GetAtt:
        - PostEventsTopic
        - Arn  # For production, fetches ARN from the actual AWS resource

functions:
  createPost:
    handler: handler.createPost
    environment:
      SNS_TOPIC_ARN: ${self:custom.snsTopicArn.${self:provider.stage}}
    events:
      - http:
          path: posts
          method: post

  addComment:
    handler: handler.addComment
    environment:
      SNS_TOPIC_ARN: ${self:custom.snsTopicArn.${self:provider.stage}}
    events:
      - http:
          path: posts/{postId}/comments
          method: post

resources:
  Resources:
    PostEventsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: PostEventsTopic

    PostEventsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: PostEventsQueue

    PostEventsQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: PostEventsQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSNSToSendMessage
              Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource:
                Fn::GetAtt:
                  - PostEventsQueue
                  - Arn
              Condition:
                ArnEquals:
                  aws:SourceArn:
                    Fn::GetAtt:
                      - PostEventsTopic
                      - Arn

plugins:
  - serverless-dotenv-plugin  # This will be used for local development only
  - serverless-offline        # For local development and testing